{% extends 'base.html.twig' %}

{% block body %}
    {% include 'include/audio.html.twig' with { 'sound' : 'options.mp3'} %}
    <div class="my-space">

        <div class="form-input">
            {{ form_start(form) }}

            <div class="col-2">
                <div>
                    {{ form_label(form.pseudo) }}
                    {{ form_widget(form.pseudo) }}
                </div>

                <div>
                    {{ form_label(form.userAccount) }}
                    {{ form_widget(form.userAccount) }}
                </div>
            </div>
            <div style="float: right; margin-right: 86px; margin-top: 30px;">
                {% if user.avatarName %}
                    <small>You can't modify your avatar. Contact Administrator for update</small>
                    <img src="{{ user.avatarName }}" class="avatar" alt="Avatar" title="My Avatar">
                {% else %}
                    {{ form_label(form.upload_file) }}
                    {{ form_widget(form.upload_file) }}
                    {{ form_errors(form.upload_file) }}
                {% endif %}
            </div>

            <div class="container-carousel">
                <ul>
                    {% for token in user.token %}
                        <li>
                        </li>
                    {% endfor %}
                </ul>
                <div class="controls">
                    <button type="button" class="adjust" onclick="adjustDay(-1)">▲</button>
                    <button type="button" class="adjust" onclick="adjustDay(1)">▼</button>
                </div>
            </div>

            <div>
                {{ form_widget(form.save) }}
            </div>
            {{ form_end(form) }}
        </div>
    </div>


    <script>
        let febHolidays = [];
        {% for token in user.token %}
            febHolidays.push('{{ token.name }} ({{ token.reference }}) {{ token.quantity|number_format(8, '.', ',') }}')
        {% endfor %}
        const ulEl = document.querySelector("ul");
        const d = new Date();
        let daynumber = d.getMonth() == 1 ? d.getDate() - 1 : 0;
        let activeIndex = daynumber;
        const rotate = -360 / febHolidays.length;
        init();

        function init() {
            febHolidays.forEach((holiday, idx) => {
                const liEl = document.createElement("li");
                liEl.style.setProperty("--day_idx", idx);
                liEl.innerHTML = `<time datetime="2022-02-${idx + 1}">${
                    idx + 1
                }</time><span>${holiday}</span>`;
                ulEl.append(liEl);
            });
            ulEl.style.setProperty("--rotateDegrees", rotate);
            adjustDay(0);
        }

        function adjustDay(nr) {
            daynumber += nr;
            ulEl.style.setProperty("--currentDay", daynumber);

            const activeEl = document.querySelector("li.active");
            if (activeEl) activeEl.classList.remove("active");

            activeIndex = (activeIndex + nr + febHolidays.length) % febHolidays.length;
            const newActiveEl = document.querySelector(`li:nth-child(${activeIndex + 1})`);
            document.body.style.backgroundColor = window.getComputedStyle(
                newActiveEl
            ).backgroundColor;

            newActiveEl.classList.add("active");
        }

        window.addEventListener("keydown", (e) => {
            switch (e.key) {
                case "ArrowUp":
                    adjustDay(-1);
                    break;
                case "ArrowDown":
                    adjustDay(1);
                    break;
                default:
                    return;
            }
        });

    </script>
{% endblock %}